{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./token-storage.service\";\nimport * as i3 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(_api, _token, http) {\n      this._api = _api;\n      this._token = _token;\n      this.http = http;\n      this.userSubject = new BehaviorSubject(this._token.getUser());\n      this.user = this.userSubject.asObservable();\n    }\n    getUser() {\n      console.log(this.userSubject);\n      console.log(this.userSubject.value);\n      return this.userSubject.value;\n    }\n    login(credentials) {\n      return this._api.postTypeRequest('auth/login', credentials).pipe(map(res => {\n        let user = {\n          email: credentials.email,\n          id: res.id,\n          token: res.token,\n          role: res.authorities[0].authority\n        };\n        this._token.setToken(res.token);\n        this._token.setUser(res.nombreUsuario);\n        this._token.setId(res.id);\n        this._token.setRole(res.authorities[0].authority);\n        console.log(res.authorities[0].authority);\n        //   console.log(res);\n        this.userSubject.next(user.role);\n        console.log(user);\n        return user;\n      }));\n    }\n    register(user) {\n      return this._api.postTypeRequest('auth/register', user);\n    }\n    logout() {\n      this._token.clearStorage();\n      this.userSubject.next(null);\n    }\n    clienteEmpresa(cliente_empresa, id) {\n      return this._api.postTypeRequest('api/cliente_empresaGuardar/' + id, cliente_empresa);\n    }\n    getClienteById(id) {\n      return this._api.getTypeRequest('api/clienteId/' + id);\n    }\n    cambiarRol(cliente, id) {\n      return this._api.putTypeRequest('api/clienteCambiarRol/' + id, cliente);\n    }\n    ///******************************************** */\n    getClienteEmperesaById(id) {\n      return this._api.getTypeRequest('api/cliente_empresa/' + id);\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.TokenStorageService), i0.ɵɵinject(i3.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}