{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EmpresaProductoComponent = class EmpresaProductoComponent {\n  constructor(productService, nzMessageService, _token, modalService, modal) {\n    this.productService = productService;\n    this.nzMessageService = nzMessageService;\n    this._token = _token;\n    this.modalService = modalService;\n    this.modal = modal;\n    this.listas = [];\n    this.isVisible = false;\n    this.isConfirmLoading = false;\n    this.fileList = [];\n    this.editCache = {};\n    this.listOfData = [];\n    this.searchValue = '';\n    this.visible = false;\n    this.product = [{\n      id_producto: '',\n      nombre: '',\n      descripcion: '',\n      precio: Number(),\n      precio_fabrica: Number(),\n      cantidad: Number(),\n      descuento: Number(),\n      fecha_registro: new Date(Date.now()),\n      fileList: []\n    }];\n    this.productoEdi = {\n      nombre: '',\n      descripcion: '',\n      precio: Number(),\n      precio_fabrica: Number(),\n      cantidad: Number(),\n      descuento: Number(),\n      fecha_registro: new Date(Date.now()),\n      fileList: []\n    };\n  }\n  confirm() {\n    this.nzMessageService.info('Guardado');\n  }\n  startEdit(id) {\n    this.editCache[id].edit = true;\n  }\n  cancelEdit(id) {\n    const index = this.listOfData.findIndex(item => item.id_producto === id);\n    this.editCache[id] = {\n      dato: Object.assign({}, this.listOfData[index]),\n      edit: false\n    };\n  }\n  saveEdit(id) {\n    const index = this.listOfData.findIndex(item => item.id_producto === id);\n    console.log(this.editCache[id].dato);\n    this.productoEdi = {\n      nombre: this.editCache[id].dato.nombre,\n      descripcion: this.editCache[id].dato.descripcion,\n      precio: this.editCache[id].dato.precio,\n      precio_fabrica: this.editCache[id].dato.precio_fabrica,\n      cantidad: this.editCache[id].dato.cantidad,\n      descuento: this.editCache[id].dato.descuento,\n      fileList: this.editCache[id].dato.fileList,\n      fecha_registro: new Date(Date.now())\n    };\n    console.log(this.productoEdi);\n    this.confirm();\n    this.productService.editarProducto(id, this.productoEdi).subscribe(res => {\n      console.log(id);\n      //  this.handleOk();\n    }, err => console.log(err));\n    Object.assign(this.listOfData[index], this.editCache[id].dato);\n    this.editCache[id].edit = false;\n  }\n  updateEditCache() {\n    this.listOfData.forEach(item => {\n      this.editCache[item.id_producto] = {\n        edit: false,\n        dato: Object.assign({}, item)\n      };\n    });\n  }\n  ngOnInit() {\n    this.userId = this._token.getId();\n    this.productService.getAllProductsEmpresa(this.userId).subscribe(res => {\n      //   this.lista = res;\n      //  this.product = res;\n      this.listOfData = res;\n      console.log(res);\n      this.updateEditCache();\n    }, err => console.log(err));\n  }\n  deleteRow(id) {\n    this.listOfData = this.listOfData.filter(d => d.id_producto !== id);\n    console.log(id);\n  }\n  editarProducto(id, product) {\n    this.productService.editarProducto(id, product).subscribe(res => {\n      console.log(id);\n      //  this.handleOk();\n    }, err => console.log(err));\n  }\n  eliminarProducto(id) {\n    this.productService.eliminarProducto(id).subscribe(res => {\n      this.ngOnInit();\n    }, err => console.log(err));\n  }\n  showConfirm(id) {\n    this.confirmModal = this.modal.confirm({\n      nzTitle: 'Estas seguro de borrar el producto?',\n      nzContent: 'Si borras el producto, este no volvera a parecer en tu inventario y no se podra recuperar',\n      nzOnOk: () => new Promise((resolve, reject) => {\n        this.eliminarProducto(id), setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n      }).catch(() => console.log('Oops errors!'))\n    });\n  }\n  reset() {\n    this.searchValue = '';\n    this.search();\n  }\n  search() {\n    this.visible = false;\n    let id = this._token.getId();\n    this.userId = id;\n    this.productService.getAllProductsEmpresa(this.userId).subscribe(res => {\n      //  this.lista = res;        \n      this.listOfData = res.filter(item => item.nombre.indexOf(this.searchValue) !== -1);\n    }, err => console.log(err));\n  }\n};\nEmpresaProductoComponent = __decorate([Component({\n  selector: 'app-empresa-producto',\n  templateUrl: './empresa-producto.component.html',\n  styleUrls: ['./empresa-producto.component.scss']\n})], EmpresaProductoComponent);\nexport { EmpresaProductoComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}